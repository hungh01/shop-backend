// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../lib/prisma-client"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  name      String
  email     String   @unique
  password  String
  phone     String?
  city      String?
  district  String?
  ward      String?
  address   String?
  isUser    Boolean? @default(true)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  cart      Cart[]
  orders    Order[]
}

model Product {
  id          Int              @id @default(autoincrement())
  name        String?
  description String?
  price       Float?
  image       String?
  stock       Int?
  createdAt   DateTime         @default(now())
  updatedAt   DateTime         @updatedAt
  categoryId  Int?
  category    ProductCategory? @relation(fields: [categoryId], references: [id])
  cart        Cart[]
  orderItems  OrderItems[]
}

model ProductCategory {
  id          Int       @id @default(autoincrement())
  name        String?
  description String?
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  products    Product[]
}

model Cart {
  id        Int      @id @default(autoincrement())
  userId    Int
  productId Int
  quantity  Int?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  user      User     @relation(fields: [userId], references: [id])
  product   Product  @relation(fields: [productId], references: [id])
}

model Order {
  id         Int          @id @default(autoincrement())
  userId     Int?
  name       String?
  phone      String?
  totalPrice Float?
  status     String?
  city       String?
  district   String?
  ward       String?
  address    String?
  createdAt  DateTime     @default(now())
  updatedAt  DateTime     @updatedAt
  user       User?        @relation(fields: [userId], references: [id])
  orderItems OrderItems[]
}

model OrderItems {
  id         Int      @id @default(autoincrement())
  orderId    Int
  productId  Int
  quantity   Int?
  totalPrice Float?
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  order      Order    @relation(fields: [orderId], references: [id])
  product    Product  @relation(fields: [productId], references: [id])
}

//npx prisma migrate dev --name users
//Re-genarate
//npx prisma generate
